
type InclusionInCountry @aws_iam @aws_api_key {
  Country: [AWSJSON]
}

type AccommodationHotelDataModel @aws_iam @aws_api_key {
  standard: String
  name: String
}

type DayWiseDataModel @aws_iam @aws_api_key {
  day: String
  desc: String
}

type PackageDetailModel @aws_iam @aws_api_key {
  code: String
  name: String
  link: String
  countries: [String]
  day_wise: [DayWiseDataModel]
  accommodation_hotel_wise: [AccommodationHotelDataModel]
  accommodation: [String]
  exclusions: [String]
  inclusions_country_wise: [InclusionInCountry]
  inclusions_list: [String]
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type ContactFormModel @aws_iam @aws_api_key {
  id: ID!
  name: String
  email: String
  phone: String
  package_code: String
  query: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

input DayWiseDataModelInput {
  day: String
  desc: String
}

input AccommodationHotelDataModelInput {
  standard: String
  name: String
}

input InclusionInCountryInput {
  Country: [AWSJSON]
}

type ModelPackageDetailModelConnection @aws_api_key @aws_iam {
  items: [PackageDetailModel]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelPackageDetailModelFilterInput {
  code: ModelStringInput
  name: ModelStringInput
  link: ModelStringInput
  countries: ModelStringInput
  accommodation: ModelStringInput
  exclusions: ModelStringInput
  inclusions_list: ModelStringInput
  id: ModelIDInput
  and: [ModelPackageDetailModelFilterInput]
  or: [ModelPackageDetailModelFilterInput]
  not: ModelPackageDetailModelFilterInput
}

type Query {
  getPackageDetailModel(id: ID!): PackageDetailModel @aws_api_key @aws_iam
  listPackageDetailModels(filter: ModelPackageDetailModelFilterInput, limit: Int, nextToken: String): ModelPackageDetailModelConnection @aws_api_key @aws_iam
  syncPackageDetailModels(filter: ModelPackageDetailModelFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelPackageDetailModelConnection @aws_api_key @aws_iam
  getContactFormModel(id: ID!): ContactFormModel @aws_api_key @aws_iam
  listContactFormModels(filter: ModelContactFormModelFilterInput, limit: Int, nextToken: String): ModelContactFormModelConnection @aws_api_key @aws_iam
  syncContactFormModels(filter: ModelContactFormModelFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelContactFormModelConnection @aws_api_key @aws_iam
}

input ModelPackageDetailModelConditionInput {
  code: ModelStringInput
  name: ModelStringInput
  link: ModelStringInput
  countries: ModelStringInput
  accommodation: ModelStringInput
  exclusions: ModelStringInput
  inclusions_list: ModelStringInput
  and: [ModelPackageDetailModelConditionInput]
  or: [ModelPackageDetailModelConditionInput]
  not: ModelPackageDetailModelConditionInput
}

input CreatePackageDetailModelInput {
  code: String
  name: String
  link: String
  countries: [String]
  day_wise: [DayWiseDataModelInput]
  accommodation_hotel_wise: [AccommodationHotelDataModelInput]
  accommodation: [String]
  exclusions: [String]
  inclusions_country_wise: [InclusionInCountryInput]
  inclusions_list: [String]
  id: ID
  _version: Int
}

input UpdatePackageDetailModelInput {
  code: String
  name: String
  link: String
  countries: [String]
  day_wise: [DayWiseDataModelInput]
  accommodation_hotel_wise: [AccommodationHotelDataModelInput]
  accommodation: [String]
  exclusions: [String]
  inclusions_country_wise: [InclusionInCountryInput]
  inclusions_list: [String]
  id: ID!
  _version: Int
}

input DeletePackageDetailModelInput {
  id: ID!
  _version: Int
}

type Mutation {
  createPackageDetailModel(input: CreatePackageDetailModelInput!, condition: ModelPackageDetailModelConditionInput): PackageDetailModel @aws_api_key @aws_iam
  updatePackageDetailModel(input: UpdatePackageDetailModelInput!, condition: ModelPackageDetailModelConditionInput): PackageDetailModel @aws_api_key @aws_iam
  deletePackageDetailModel(input: DeletePackageDetailModelInput!, condition: ModelPackageDetailModelConditionInput): PackageDetailModel @aws_api_key @aws_iam
  createContactFormModel(input: CreateContactFormModelInput!, condition: ModelContactFormModelConditionInput): ContactFormModel @aws_api_key @aws_iam
  updateContactFormModel(input: UpdateContactFormModelInput!, condition: ModelContactFormModelConditionInput): ContactFormModel @aws_api_key @aws_iam
  deleteContactFormModel(input: DeleteContactFormModelInput!, condition: ModelContactFormModelConditionInput): ContactFormModel @aws_api_key @aws_iam
}

input ModelSubscriptionPackageDetailModelFilterInput {
  code: ModelSubscriptionStringInput
  name: ModelSubscriptionStringInput
  link: ModelSubscriptionStringInput
  countries: ModelSubscriptionStringInput
  accommodation: ModelSubscriptionStringInput
  exclusions: ModelSubscriptionStringInput
  inclusions_list: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  and: [ModelSubscriptionPackageDetailModelFilterInput]
  or: [ModelSubscriptionPackageDetailModelFilterInput]
}

type Subscription {
  onCreatePackageDetailModel(filter: ModelSubscriptionPackageDetailModelFilterInput): PackageDetailModel @aws_subscribe(mutations: ["createPackageDetailModel"]) @aws_api_key @aws_iam
  onUpdatePackageDetailModel(filter: ModelSubscriptionPackageDetailModelFilterInput): PackageDetailModel @aws_subscribe(mutations: ["updatePackageDetailModel"]) @aws_api_key @aws_iam
  onDeletePackageDetailModel(filter: ModelSubscriptionPackageDetailModelFilterInput): PackageDetailModel @aws_subscribe(mutations: ["deletePackageDetailModel"]) @aws_api_key @aws_iam
  onCreateContactFormModel(filter: ModelSubscriptionContactFormModelFilterInput): ContactFormModel @aws_subscribe(mutations: ["createContactFormModel"]) @aws_api_key @aws_iam
  onUpdateContactFormModel(filter: ModelSubscriptionContactFormModelFilterInput): ContactFormModel @aws_subscribe(mutations: ["updateContactFormModel"]) @aws_api_key @aws_iam
  onDeleteContactFormModel(filter: ModelSubscriptionContactFormModelFilterInput): ContactFormModel @aws_subscribe(mutations: ["deleteContactFormModel"]) @aws_api_key @aws_iam
}

type ModelContactFormModelConnection @aws_api_key @aws_iam {
  items: [ContactFormModel]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelContactFormModelFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  email: ModelStringInput
  phone: ModelStringInput
  package_code: ModelStringInput
  query: ModelStringInput
  and: [ModelContactFormModelFilterInput]
  or: [ModelContactFormModelFilterInput]
  not: ModelContactFormModelFilterInput
}

input ModelContactFormModelConditionInput {
  name: ModelStringInput
  email: ModelStringInput
  phone: ModelStringInput
  package_code: ModelStringInput
  query: ModelStringInput
  and: [ModelContactFormModelConditionInput]
  or: [ModelContactFormModelConditionInput]
  not: ModelContactFormModelConditionInput
}

input CreateContactFormModelInput {
  id: ID
  name: String
  email: String
  phone: String
  package_code: String
  query: String
  _version: Int
}

input UpdateContactFormModelInput {
  id: ID!
  name: String
  email: String
  phone: String
  package_code: String
  query: String
  _version: Int
}

input DeleteContactFormModelInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionContactFormModelFilterInput {
  id: ModelSubscriptionIDInput
  name: ModelSubscriptionStringInput
  email: ModelSubscriptionStringInput
  phone: ModelSubscriptionStringInput
  package_code: ModelSubscriptionStringInput
  query: ModelSubscriptionStringInput
  and: [ModelSubscriptionContactFormModelFilterInput]
  or: [ModelSubscriptionContactFormModelFilterInput]
}

